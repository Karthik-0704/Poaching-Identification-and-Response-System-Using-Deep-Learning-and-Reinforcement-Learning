name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint Code
        run: echo "Linting Repository"

      - name: Run Unit Tests
        run: echo "Running Unit Tests"

  build-and-push-docker-image:
    name: Continuous Delivery
    needs: integration  # Runs only after integration job succeeds
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image to Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/elephant-detection:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/elephant-detection:latest

  deployment:
    name: Continuous Deployment
    needs: build-and-push-docker-image  # Runs after Docker image is pushed
    runs-on: self-hosted  # Uses AWS EC2 self-hosted runner

    steps:
      - name: Cleanup Docker Containers Before Pulling New Image
        run: |
          echo "â›” Removing all existing containers (running & stopped)..."
          docker rm -f $(docker ps -aq) || true  # Remove all containers
          echo "ðŸš® Removing all unused Docker images..."
          docker image prune -af

      - name: Deploy to AWS EC2
        run: |
          echo "âœ… Pulling latest Docker image..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/elephant-detection:latest

          echo "ðŸš€ Running new container..."
          docker run -d -p 8501:8501 --name elephant-container ${{ secrets.DOCKER_USERNAME }}/elephant-detection:latest

      - name: Cleanup Docker Containers After Deployment
        run: |
          echo "â›” Removing all stopped containers to free up space..."
          docker rm -f $(docker ps -aq) || true  # Remove all stopped containers
          echo "ðŸš® Removing any dangling Docker images..."
          docker image prune -af
